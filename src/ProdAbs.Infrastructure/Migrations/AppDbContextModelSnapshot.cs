// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProdAbs.Infrastructure.Data;

#nullable disable

namespace ProdAbs.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProdAbs.Domain.Entities.Documento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("DicionarioDeCamposValores")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Formato")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HashTipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HashValor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeArquivoOriginal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StorageLocation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("TamanhoEmBytes")
                        .HasColumnType("bigint");

                    b.Property<Guid>("TipoDeDocumentoId")
                        .HasColumnType("uuid");

                    b.Property<int>("Versao")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("ProdAbs.Domain.Entities.Prontuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.PrimitiveCollection<List<Guid>>("DocumentoIds")
                        .IsRequired()
                        .HasColumnType("uuid[]");

                    b.Property<string>("IdentificadorEntidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TipoProntuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Prontuarios");
                });

            modelBuilder.Entity("ProdAbs.Domain.Entities.TipoDocumento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TiposDeDocumento");
                });

            modelBuilder.Entity("ProdAbs.Domain.Entities.TipoDocumento", b =>
                {
                    b.OwnsMany("ProdAbs.Domain.ValueObjects.CampoMetadata", "Campos", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Label")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Mascara")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<Guid>("TipoDocumentoId")
                                .HasColumnType("uuid");

                            b1.HasKey("Id");

                            b1.HasIndex("TipoDocumentoId");

                            b1.ToTable("CampoMetadata");

                            b1.WithOwner()
                                .HasForeignKey("TipoDocumentoId");

                            b1.OwnsOne("ProdAbs.Domain.ValueObjects.RegraValidacao", "RegraDeValidacao", b2 =>
                                {
                                    b2.Property<int>("CampoMetadataId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("FormatoEspecifico")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<bool>("Obrigatorio")
                                        .HasColumnType("boolean");

                                    b2.Property<int>("TipoDeDados")
                                        .HasColumnType("integer");

                                    b2.HasKey("CampoMetadataId");

                                    b2.ToTable("CampoMetadata");

                                    b2.WithOwner()
                                        .HasForeignKey("CampoMetadataId");
                                });

                            b1.Navigation("RegraDeValidacao")
                                .IsRequired();
                        });

                    b.Navigation("Campos");
                });
#pragma warning restore 612, 618
        }
    }
}
